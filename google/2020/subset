subset

可能subset都得用backtracking

https://leetcode.com/problems/subsets/
class Solution:
    def subsets(self, nums: List[int]) -> List[List[int]]: 
        def helper(index, path):
            rst.append(path)
            for i in range(index, len(nums)):
                helper(i+1, path + [nums[i]])
        rst = []
        helper(0, [])
        return rst


https://leetcode.com/problems/subsets-ii/
class Solution:
    def subsetsWithDup(self, nums: List[int]) -> List[List[int]]:
        nums.sort()
        def dfs(index, path):
            rst.append(path)
            for i in range(index, len(nums)):
                if i != index and nums[i] == nums[i - 1]:
                    continue
                dfs(i +1, path+[nums[i]])
        rst = []
        dfs(0, [])
        return rst


https://leetcode.com/problems/partition-to-k-equal-sum-subsets/
